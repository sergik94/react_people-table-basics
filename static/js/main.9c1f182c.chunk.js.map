{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","api.ts","components/Parent/Parent.tsx","components/People/People.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","person","to","slug","sex","name","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Parent","parent","parentName","People","useState","people","setPeople","isLoading","setLoading","isError","setError","useParams","personData","peopleList","useEffect","getPeopleList","length","map","mother","find","currPerson","motherName","father","fatherName","born","died","Navigation","role","isActive","classNames","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9c1f182c.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={person.sex === 'f' ? 'has-text-danger' : ''}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { PersonLink } from '../PersonLink';\nimport { Person } from '../../types';\n\ntype Props = {\n  parent: Person | null;\n  parentName: string | null;\n};\n\nexport const Parent: React.FC<Props> = ({ parent, parentName }) => {\n  return (\n    <>\n      {!!parent && <PersonLink person={parent} />}\n      {!!parentName && !parent && `${parentName}`}\n      {!parentName && '-'}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\nimport { getPeople } from '../../api';\nimport { Parent } from '../Parent';\n\nexport const People = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(false);\n  const { personData = '' } = useParams();\n\n  async function getPeopleList() {\n    try {\n      setLoading(true);\n\n      const peopleList = await getPeople();\n\n      setPeople(peopleList);\n    } catch (error) {\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getPeopleList();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <h1 className=\"title\">People Page</h1>\n\n        {isLoading && <Loader />}\n\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {!isError && !isLoading && people.length === 0 && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {!isError && people.length > 0 && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people?.map(person => {\n                const mother = people.find(\n                  currPerson => currPerson.name === person.motherName,\n                ) || null;\n                const father = people.find(\n                  currPerson => currPerson.name === person.fatherName,\n                ) || null;\n\n                return (\n                  <tr\n                    key={person.slug}\n                    data-cy=\"person\"\n                    className={personData === person.slug\n                      ? 'has-background-warning' : ''}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      <Parent parent={mother} parentName={person.motherName} />\n                    </td>\n                    <td>\n                      <Parent parent={father} parentName={person.fatherName} />\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { People } from './components/People';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<People />} />\n            <Route path=\":personData\" element={<People />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}